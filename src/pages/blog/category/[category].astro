---
import Layout from '../../../layouts/Layout.astro';
import Header from '../../../components/Header.astro';
import Footer from '../../../components/Footer.astro';
import HeroSection from '../../../components/HeroSection.astro';
import BlogCard from '../../../components/BlogCard.astro';
import { getCollection } from 'astro:content';
import SlideUp from '../../../components/SlideUp.astro';

// Récupérer la catégorie depuis le paramètre de route
const { category } = Astro.params;

// Récupérer tous les articles
const allPosts = await getCollection('blog');
const sortedPosts = allPosts.sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime());

// Extraire les catégories uniques pour la navigation
const categories = [...new Set(allPosts.map(post => post.data.category))];

// Normalisation des catégories
const normalizeCategory = (cat) => cat.toLowerCase().replace(/\s+/g, '-');

// Filtrer les posts selon la catégorie active
const filteredPosts = category === 'all' 
  ? sortedPosts 
  : sortedPosts.filter(post => normalizeCategory(post.data.category) === category);

// Titre de la page optimisé pour SEO
const categoryTitle = category === 'all' 
  ? 'Tous les articles' 
  : categories.find(cat => normalizeCategory(cat) === category) || 'Catégorie';

  export async function getStaticPaths() {
  const posts = await getCollection('blog');
  
  // Extraire les catégories uniques
  const categories = [...new Set(posts.map(post => post.data.category))];
  
  // Normaliser les catégories
  const normalizeCategory = (cat) => cat.toLowerCase().replace(/\s+/g, '-');
  
  // Créer un chemin pour "all" et pour chaque catégorie
  const paths = [
    {
      params: { category: 'all' },
    },
    ...categories.map(category => ({
      params: { category: normalizeCategory(category) },
    }))
  ];
  
  return paths;
}

const pageTitle = `${categoryTitle} - Blog - Le comptoir de l'IA`;
---

<Layout title={pageTitle} description={`Articles sur ${categoryTitle.toLowerCase()} - Le comptoir de l'IA. Etude de cas, conseils et actualités.`}>
  <Header />
  <main>
    <HeroSection 
      title={`Blog: ${categoryTitle}`} 
      highlightText={categoryTitle}
      description="Découvrez nos derniers contenus, analyses et actualités sur l'intelligence artificielle."
    />
    
    <!-- Category Filter -->
    <div class="container-custom py-8">
      <div class="flex flex-wrap gap-4 justify-center mb-12">
        <a 
          href="/blog/category/all" 
          class:list={[
            "px-4 py-2 rounded-full font-medium text-sm transition-colors",
            category === 'all' ? 'bg-primary-600 text-white' : 'bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700'
          ]}
        >
          Tous les articles
        </a>
        {categories.map((cat) => (
          <a 
            href={`/blog/category/${normalizeCategory(cat)}`}
            class:list={[
              "px-4 py-2 rounded-full font-medium text-sm transition-colors",
              normalizeCategory(cat) === category ? 'bg-primary-600 text-white' : 'bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700'
            ]}
          >
            {cat}
          </a>
        ))}
      </div>

      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {filteredPosts.map((post, index) => (
          <SlideUp delay={index * 150}>
            <BlogCard post={post} />
          </SlideUp>
        ))}
      </div>

      {filteredPosts.length === 0 && (
        <div class="text-center py-12">
          <p class="text-lg text-gray-600 dark:text-gray-400">Aucun article trouvé dans cette catégorie.</p>
        </div>
      )}
    </div>
  </main>
  <Footer />
</Layout>